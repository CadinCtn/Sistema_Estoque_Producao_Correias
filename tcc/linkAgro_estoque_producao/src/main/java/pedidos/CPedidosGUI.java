/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pedidos;


import doc_arquivados.OpArqvDAO;
import estoque.CEstoqueGUI;
import help.HPedidos;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import menus.MenuGUI;
import ordem_producao.ROrdemProducaoGUI;
import produtos.Produto;
import produtos.ProdutosGUI;
import usuarios.CUsuarioGUI;
import menus.Controller;
import usuarios.LoginGUI;


/**
 *
 * @author Lenovo
 */
public class CPedidosGUI extends javax.swing.JFrame {

    /**
     * Creates new form CPedidosGUI
     */
    public CPedidosGUI() {
        initComponents();
        tabelaProd();
        tabelaArch();
    }

    
    //Gerando tabela de pedidos
    public void tabelaProd(){
        PedidoDAO pedidodao = new PedidoDAO();
        DefaultTableModel modelo = (DefaultTableModel) tab_pedidosProd.getModel();
        
        //limpando tabela
        while(tab_pedidosProd.getModel().getRowCount() > 0 ){
            ((DefaultTableModel) tab_pedidosProd.getModel()).removeRow(0);
        }
        
        
        List<Pedido> pedidoList = pedidodao.selectPedidos();
        for (Pedido pedido : pedidoList) {
            
            Object[] line = {pedido.getId(), pedido.getNomeCliente(), pedido.getFechamento(),pedido.getEmbarque(),pedido.getObservacao()};
            modelo.addRow(line);
            
        }
        
    }
    public void tabelaArch(){
        PedidoDAO pedidodao = new PedidoDAO();
        DefaultTableModel modelo = (DefaultTableModel) tab_pedidosArch.getModel();
        
        //limpando tabela
        while(tab_pedidosArch.getModel().getRowCount() > 0 ){
            ((DefaultTableModel) tab_pedidosArch.getModel()).removeRow(0);
        }
        
        
        List<Pedido> pedidoList = pedidodao.selectPedidosArquivados();
        for (Pedido pedido : pedidoList) {
            
            Object[] line = {pedido.getId(), pedido.getNomeCliente(), pedido.getFechamento(),pedido.getEmbarque(),pedido.getObservacao()};
            modelo.addRow(line);
            
        }
        
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btn_back = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tab_pedidosProd = new javax.swing.JTable();
        upd_pedidoProd = new javax.swing.JButton();
        del_pedidoProd = new javax.swing.JButton();
        add_pedido = new javax.swing.JButton();
        arch_pedidoProd = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tab_pedidosArch = new javax.swing.JTable();
        upd_pedidoArch = new javax.swing.JButton();
        del_pedidoArch = new javax.swing.JButton();
        upd_reativarPed = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        submenu_users = new javax.swing.JMenu();
        submenu_pedidos = new javax.swing.JMenuItem();
        submenu_newop = new javax.swing.JMenuItem();
        submenu_estoque = new javax.swing.JMenuItem();
        submenu_newproduct = new javax.swing.JMenuItem();
        submenu_user = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pedidos");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        btn_back.setBackground(new java.awt.Color(255, 255, 255));
        btn_back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/botao-voltar (1).png"))); // NOI18N
        btn_back.setBorder(null);
        btn_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_backActionPerformed(evt);
            }
        });

        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        tab_pedidosProd.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tab_pedidosProd.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID PEDIDO", "NOME CLIENTE", "DATA FECHAMENTO", "DATA EMBARQUE", "OBS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tab_pedidosProd.setSelectionBackground(new java.awt.Color(153, 153, 153));
        // Configurando a renderização das células para centralizar
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);

        // Aplicando a renderização centralizada a todas as colunas
        tab_pedidosProd.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
        tab_pedidosProd.getColumnModel().getColumn(2).setCellRenderer(centerRenderer);
        tab_pedidosProd.getColumnModel().getColumn(3).setCellRenderer(centerRenderer);
        jScrollPane6.setViewportView(tab_pedidosProd);
        if (tab_pedidosProd.getColumnModel().getColumnCount() > 0) {
            tab_pedidosProd.getColumnModel().getColumn(0).setMinWidth(100);
            tab_pedidosProd.getColumnModel().getColumn(0).setPreferredWidth(100);
            tab_pedidosProd.getColumnModel().getColumn(0).setMaxWidth(100);
            tab_pedidosProd.getColumnModel().getColumn(2).setMinWidth(150);
            tab_pedidosProd.getColumnModel().getColumn(2).setPreferredWidth(150);
            tab_pedidosProd.getColumnModel().getColumn(2).setMaxWidth(150);
            tab_pedidosProd.getColumnModel().getColumn(3).setMinWidth(150);
            tab_pedidosProd.getColumnModel().getColumn(3).setPreferredWidth(150);
            tab_pedidosProd.getColumnModel().getColumn(3).setMaxWidth(150);
        }

        upd_pedidoProd.setBackground(new java.awt.Color(255, 255, 255));
        upd_pedidoProd.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        upd_pedidoProd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/editar (2).png"))); // NOI18N
        upd_pedidoProd.setText("Editar");
        upd_pedidoProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upd_pedidoProdActionPerformed(evt);
            }
        });

        del_pedidoProd.setBackground(new java.awt.Color(255, 255, 255));
        del_pedidoProd.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        del_pedidoProd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/excluir.png"))); // NOI18N
        del_pedidoProd.setText("Excluir");
        del_pedidoProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                del_pedidoProdActionPerformed(evt);
            }
        });

        add_pedido.setBackground(new java.awt.Color(255, 255, 255));
        add_pedido.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        add_pedido.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/adicionar.png"))); // NOI18N
        add_pedido.setText("Adicionar");
        add_pedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_pedidoActionPerformed(evt);
            }
        });

        arch_pedidoProd.setBackground(new java.awt.Color(255, 255, 255));
        arch_pedidoProd.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        arch_pedidoProd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/pedido.png"))); // NOI18N
        arch_pedidoProd.setText("Arquivar");
        arch_pedidoProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arch_pedidoProdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(add_pedido)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(upd_pedidoProd, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(arch_pedidoProd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(del_pedidoProd)
                .addContainerGap())
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 767, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(upd_pedidoProd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(del_pedidoProd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(add_pedido, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(arch_pedidoProd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Pedidos em Produção", jPanel2);

        tab_pedidosArch.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tab_pedidosArch.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID PEDIDO", "NOME CLIENTE", "DATA FECHAMENTO", "DATA EMBARQUE", "OBS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tab_pedidosArch.setSelectionBackground(new java.awt.Color(153, 153, 153));
        // Aplicando a renderização centralizada a todas as colunas
        tab_pedidosArch.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
        tab_pedidosArch.getColumnModel().getColumn(2).setCellRenderer(centerRenderer);
        tab_pedidosArch.getColumnModel().getColumn(3).setCellRenderer(centerRenderer);
        jScrollPane5.setViewportView(tab_pedidosArch);
        if (tab_pedidosArch.getColumnModel().getColumnCount() > 0) {
            tab_pedidosArch.getColumnModel().getColumn(0).setMinWidth(100);
            tab_pedidosArch.getColumnModel().getColumn(0).setPreferredWidth(100);
            tab_pedidosArch.getColumnModel().getColumn(0).setMaxWidth(100);
            tab_pedidosArch.getColumnModel().getColumn(2).setMinWidth(150);
            tab_pedidosArch.getColumnModel().getColumn(2).setPreferredWidth(150);
            tab_pedidosArch.getColumnModel().getColumn(2).setMaxWidth(150);
            tab_pedidosArch.getColumnModel().getColumn(3).setMinWidth(150);
            tab_pedidosArch.getColumnModel().getColumn(3).setPreferredWidth(150);
            tab_pedidosArch.getColumnModel().getColumn(3).setMaxWidth(150);
        }

        upd_pedidoArch.setBackground(new java.awt.Color(255, 255, 255));
        upd_pedidoArch.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        upd_pedidoArch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/editar (2).png"))); // NOI18N
        upd_pedidoArch.setText("Editar");
        upd_pedidoArch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upd_pedidoArchActionPerformed(evt);
            }
        });

        del_pedidoArch.setBackground(new java.awt.Color(255, 255, 255));
        del_pedidoArch.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        del_pedidoArch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/excluir.png"))); // NOI18N
        del_pedidoArch.setText("Excluir");
        del_pedidoArch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                del_pedidoArchActionPerformed(evt);
            }
        });

        upd_reativarPed.setBackground(new java.awt.Color(255, 255, 255));
        upd_reativarPed.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        upd_reativarPed.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/file.png"))); // NOI18N
        upd_reativarPed.setText("Reativar Pedido");
        upd_reativarPed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upd_reativarPedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(upd_pedidoArch, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(upd_reativarPed)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(del_pedidoArch)
                .addContainerGap())
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 767, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(upd_pedidoArch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(del_pedidoArch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(upd_reativarPed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Pedidos Arquivados", jPanel3);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_back)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_back)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1))
        );

        submenu_users.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icon_plus.png"))); // NOI18N
        submenu_users.setText("Menu");
        submenu_users.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N

        submenu_pedidos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/pedidos.png"))); // NOI18N
        submenu_pedidos.setText("Pedidos");
        submenu_pedidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submenu_pedidosActionPerformed(evt);
            }
        });
        submenu_users.add(submenu_pedidos);

        submenu_newop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/clipboard.png"))); // NOI18N
        submenu_newop.setText("Ordem de produção");
        submenu_newop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submenu_newopActionPerformed(evt);
            }
        });
        submenu_users.add(submenu_newop);

        submenu_estoque.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/estoque.png"))); // NOI18N
        submenu_estoque.setText("Estoque Correias");
        submenu_estoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submenu_estoqueActionPerformed(evt);
            }
        });
        submenu_users.add(submenu_estoque);

        submenu_newproduct.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icon_belt.png"))); // NOI18N
        submenu_newproduct.setText("Produtos");
        submenu_newproduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submenu_newproductActionPerformed(evt);
            }
        });
        submenu_users.add(submenu_newproduct);

        submenu_user.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/adicionar-usuario.png"))); // NOI18N
        submenu_user.setText("Usuarios");
        submenu_user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submenu_userActionPerformed(evt);
            }
        });
        submenu_users.add(submenu_user);

        jMenuBar1.add(submenu_users);

        jMenu2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icon_help.png"))); // NOI18N
        jMenu2.setText("Ajuda");

        jMenuItem1.setText("Sobre Pedidos");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    

    
    private void btn_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_backActionPerformed
        MenuGUI menugui = new MenuGUI();
        menugui.setVisible(true);
        menugui.setExtendedState(MAXIMIZED_BOTH);
        dispose();
    }//GEN-LAST:event_btn_backActionPerformed

    private void submenu_newopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submenu_newopActionPerformed

        ROrdemProducaoGUI window = new ROrdemProducaoGUI();
        window.setVisible(true);
        window.setExtendedState(MAXIMIZED_BOTH);
        Controller.setrOrdemProducaoGUI(window);
        dispose();
    }//GEN-LAST:event_submenu_newopActionPerformed

    private void submenu_newproductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submenu_newproductActionPerformed
        
        LoginGUI logingui = Controller.getLogingui();

        if("ADMINISTRADOR".equals(logingui.usuario.getPermissao())){
            ProdutosGUI window = new ProdutosGUI();
            window.setVisible(true);
            window.setLocationRelativeTo(null);
            Produto.setProdutosgui(window);
        
        } else {
            JOptionPane.showMessageDialog(null,"Acesso negado","AVISO!",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_submenu_newproductActionPerformed

    private void submenu_estoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submenu_estoqueActionPerformed
        CEstoqueGUI window = new CEstoqueGUI();
        window.setVisible(true);
        window.setExtendedState(MAXIMIZED_BOTH);
        dispose();
    }//GEN-LAST:event_submenu_estoqueActionPerformed

    private void submenu_pedidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submenu_pedidosActionPerformed

        CPedidosGUI cpedidosgui = new CPedidosGUI();
        cpedidosgui.setVisible(true);
        cpedidosgui.setExtendedState(MAXIMIZED_BOTH);
        dispose();
    }//GEN-LAST:event_submenu_pedidosActionPerformed

    private void submenu_userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submenu_userActionPerformed

        LoginGUI logingui = Controller.getLogingui();

        if("ADMINISTRADOR".equals(logingui.usuario.getPermissao())){
            CUsuarioGUI window = new CUsuarioGUI();
            window.setVisible(true);
            window.setLocationRelativeTo(null);
            Controller.setcUsuarioGUI(window);
        } else {
            JOptionPane.showMessageDialog(null,"Acesso negado","AVISO!",JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_submenu_userActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        HPedidos window = new HPedidos();
        window.setVisible(true);
        window.setLocationRelativeTo(null);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void upd_pedidoArchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upd_pedidoArchActionPerformed
        LoginGUI login = Controller.getLogingui();
                
        //Requisitando permissão para gerenciamento da tabela
        switch(login.usuario.getPermissao()){
            case "ADMINISTRADOR":
                int linhaSelecionada = -1;
                linhaSelecionada = tab_pedidosArch.getSelectedRow();
                if(linhaSelecionada >=0){
                    int id = (int) tab_pedidosArch.getValueAt(linhaSelecionada, 0);
                    
                    
                    PedidosGUI window = new PedidosGUI(null,true, new PedidoDAO().selectByID(id));
                    window.setLocationRelativeTo(null);
                    window.setVisible(true);
                    
                } else {
                    JOptionPane.showMessageDialog(null,"Selecione o pedido que deseja editar.");
                }
                break;
                
           default:
                JOptionPane.showMessageDialog(null,"Você não possui permissão!");
                break;
        }          

    }//GEN-LAST:event_upd_pedidoArchActionPerformed

    private void del_pedidoArchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_del_pedidoArchActionPerformed
        LoginGUI login = Controller.getLogingui();
                
        //Requisitando permissão para gerenciamento da tabela
        switch(login.usuario.getPermissao()){
            case "ADMINISTRADOR":
           
             int linhaSelecionada = -1;
                linhaSelecionada = tab_pedidosArch.getSelectedRow();
                if(linhaSelecionada >=0){

                    switch(JOptionPane.showConfirmDialog(null,"Deseja mesmo excluir esse pedido?","Aviso",JOptionPane.YES_NO_OPTION)){
                        case JOptionPane.YES_OPTION:
                        PedidoDAO pedidodao = new PedidoDAO();
                        int id = (int) tab_pedidosArch.getValueAt(linhaSelecionada, 0);
                        pedidodao.deletePedido(id);
                        tabelaArch();

                        break;
                    }

                } else {
                    JOptionPane.showMessageDialog(null,"Selecione o pedido que deseja excluir");
                }
                break;
            default:
                JOptionPane.showMessageDialog(null, "Você não possui permissão!");
                break;
        }
    }//GEN-LAST:event_del_pedidoArchActionPerformed

    private void upd_pedidoProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upd_pedidoProdActionPerformed
        LoginGUI login = Controller.getLogingui();
                
        //Requisitando permissão para gerenciamento da tabela
        switch(login.usuario.getPermissao()){
            case "ADMINISTRADOR":
                int linhaSelecionada = -1;
                linhaSelecionada = tab_pedidosProd.getSelectedRow();
                if(linhaSelecionada >=0){
                    int id = (int) tab_pedidosProd.getValueAt(linhaSelecionada, 0);
                    
                    
                    PedidosGUI window = new PedidosGUI(null,true, new PedidoDAO().selectByID(id));
                    window.setLocationRelativeTo(null);
                    window.setVisible(true);
                    
                } else {
                    JOptionPane.showMessageDialog(null,"Selecione o pedido que deseja editar.");
                }
                break;
                
           default:
                JOptionPane.showMessageDialog(null,"Você não possui permissão!");
                break;
        }
    }//GEN-LAST:event_upd_pedidoProdActionPerformed

    private void del_pedidoProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_del_pedidoProdActionPerformed
        LoginGUI login = Controller.getLogingui();
                
        //Requisitando permissão para gerenciamento da tabela
        switch(login.usuario.getPermissao()){
            case "ADMINISTRADOR":
           
                int linhaSelecionada = -1;
                linhaSelecionada = tab_pedidosProd.getSelectedRow();
                if(linhaSelecionada >=0){

                    switch(JOptionPane.showConfirmDialog(null,"Deseja mesmo excluir esse pedido?","Aviso",JOptionPane.YES_NO_OPTION)){
                        case JOptionPane.YES_OPTION:
                        PedidoDAO pedidodao = new PedidoDAO();
                        int id = (int) tab_pedidosProd.getValueAt(linhaSelecionada, 0);
                        pedidodao.deletePedido(id);
                        tabelaProd();

                        break;
                    }

                } else {
                    JOptionPane.showMessageDialog(null,"Selecione o pedido que deseja excluir");
                }
            break;
            
            default:
                JOptionPane.showMessageDialog(null,"Você não possui permissão!");
                break;
        }

    }//GEN-LAST:event_del_pedidoProdActionPerformed

    private void add_pedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_pedidoActionPerformed
        LoginGUI login = Controller.getLogingui();
        
        //Requisitando permissão para gerenciamento da tabela
        switch(login.usuario.getPermissao()){
            case "ADMINISTRADOR":
                PedidosGUI window = new PedidosGUI(null, true,null);
                window.setLocationRelativeTo(null);
                window.setVisible(true);
                
                break;
                
           default:
                JOptionPane.showMessageDialog(null,"Você não possui permissão!");

           break;
        }
    }//GEN-LAST:event_add_pedidoActionPerformed

    private void upd_reativarPedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upd_reativarPedActionPerformed
        LoginGUI login = Controller.getLogingui();
        switch(login.usuario.getPermissao()){
            case "COMERCIAL":
                JOptionPane.showMessageDialog(null,"Você não possui permissão!");
                break;
                
            default:
        
                int selectedRow = -1;
                selectedRow = tab_pedidosArch.getSelectedRow();
                if(selectedRow >= 0){
                    switch(JOptionPane.showConfirmDialog(null,"Deseja mesmo reativar esse pedido?","Reativar Pedido",JOptionPane.YES_NO_OPTION)){
                        case JOptionPane.YES_OPTION:
                            OpArqvDAO dao = new OpArqvDAO();
                            dao.archivePedidos(Integer.parseInt(String.valueOf(tab_pedidosArch.getValueAt(selectedRow, 0))), false);
                            tabelaArch();
                    }
                } else {
                    JOptionPane.showMessageDialog(null,"Selecione o pedido que deseja reativar");
                }
                
                break;
        }
    }//GEN-LAST:event_upd_reativarPedActionPerformed

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        tabelaArch();
        tabelaProd();
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void arch_pedidoProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arch_pedidoProdActionPerformed
        LoginGUI login = Controller.getLogingui();
        switch(login.usuario.getPermissao()){
            case "COMERCIAL":
                JOptionPane.showMessageDialog(null,"Você não possui permissão!");
                break;
                
            default:
                    int selectedRow = -1;
                selectedRow = tab_pedidosProd.getSelectedRow();
                if(selectedRow >= 0){
                    switch(JOptionPane.showConfirmDialog(null,"Deseja mesmo arquivar esse pedido?","Arquivar Pedido",JOptionPane.YES_NO_OPTION)){
                        case JOptionPane.YES_OPTION:
                            OpArqvDAO dao = new OpArqvDAO();
                            dao.archivePedidos(Integer.parseInt(String.valueOf(tab_pedidosProd.getValueAt(selectedRow, 0))), true);
                            tabelaProd();
                    }

                } else {
                    JOptionPane.showMessageDialog(null,"Selecione o pedido que deseja arquivar");
                }
                break;
        
        }
                
    }//GEN-LAST:event_arch_pedidoProdActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CPedidosGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CPedidosGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CPedidosGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CPedidosGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CPedidosGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add_pedido;
    private javax.swing.JButton arch_pedidoProd;
    private javax.swing.JButton btn_back;
    private javax.swing.JButton del_pedidoArch;
    private javax.swing.JButton del_pedidoProd;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    public javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    public javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JMenuItem submenu_estoque;
    private javax.swing.JMenuItem submenu_newop;
    private javax.swing.JMenuItem submenu_newproduct;
    private javax.swing.JMenuItem submenu_pedidos;
    private javax.swing.JMenuItem submenu_user;
    private javax.swing.JMenu submenu_users;
    private javax.swing.JTable tab_pedidosArch;
    private javax.swing.JTable tab_pedidosProd;
    private javax.swing.JButton upd_pedidoArch;
    private javax.swing.JButton upd_pedidoProd;
    private javax.swing.JButton upd_reativarPed;
    // End of variables declaration//GEN-END:variables
}
